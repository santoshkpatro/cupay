# Generated by Django 4.1.7 on 2023-02-16 03:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("merchants", "0001_initial"),
        ("transactions", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_live_mode", models.BooleanField(db_index=True, default=True)),
                (
                    "payment_id",
                    models.CharField(blank=True, max_length=50, unique=True),
                ),
                ("amount", models.PositiveIntegerField()),
                ("currency", models.CharField(max_length=3)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("created", "CREATED"),
                            ("authorized", "AUTHORIZED"),
                            ("captured", "CAPTURED"),
                            ("refunded", "REFUNDED"),
                            ("failed", "FAILED"),
                        ],
                        default="created",
                        max_length=10,
                    ),
                ),
                ("method", models.CharField(max_length=15)),
                ("description", models.TextField(blank=True, null=True)),
                ("is_international", models.BooleanField(default=False)),
                ("is_captured", models.BooleanField(default=False)),
                ("notes", models.JSONField(blank=True, null=True)),
                ("bank", models.CharField(blank=True, max_length=10, null=True)),
                ("vpa", models.CharField(blank=True, max_length=100, null=True)),
                ("wallet", models.CharField(blank=True, max_length=50, null=True)),
                ("charges", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "card_holder_name",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("card_last_digits", models.IntegerField(blank=True, null=True)),
                ("card_network", models.CharField(max_length=50)),
                (
                    "card_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("debit", "DEBIT"),
                            ("credit", "CREDIT"),
                            ("unknown", "UNKNOWN"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "card_issuer_bank",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("error_code", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "error_source",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("error_step", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "refund_status",
                    models.CharField(
                        blank=True,
                        choices=[("partial", "PARTIAL"), ("full", "FULL")],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("refund_amount", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "merchant",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="merchant_payments",
                        to="merchants.merchant",
                    ),
                ),
                (
                    "transaction",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="transactions.transaction",
                    ),
                ),
            ],
            options={
                "db_table": "payments",
            },
        ),
    ]
